# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\3_kurs\6_sem\Kursach3\test\cur_encrypt.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Curiosity_chipher(object):
    def setupUi(self, Curiosity_chipher):
        Curiosity_chipher.setObjectName("Curiosity_chipher")
        Curiosity_chipher.resize(455, 601)
        Curiosity_chipher.setMaximumSize(QtCore.QSize(460, 601))
        Curiosity_chipher.setStyleSheet("background-color: #4B0082;")

        self.centralwidget = QtWidgets.QWidget(Curiosity_chipher)
        self.centralwidget.setObjectName("centralwidget")

        self.menu_encrypt_button = QtWidgets.QPushButton(self.centralwidget)
        self.menu_encrypt_button.setGeometry(0, 0, 70, 30)
        self.menu_encrypt_button.setStyleSheet("background-color: rgb(80, 90, 100);\n"
                                               "border: None;")
        self.menu_encrypt_button.setObjectName("encrypt_buttont")

        self.menu_decryption_button = QtWidgets.QPushButton(self.centralwidget)
        self.menu_decryption_button.setGeometry(70, 0, 70, 30)
        self.menu_decryption_button.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.menu_decryption_button.setObjectName("decryption_button")

        self.input_adress_file = QtWidgets.QLineEdit(self.centralwidget)
        self.input_adress_file.setGeometry(QtCore.QRect(30, 60, 270, 25))
        self.input_adress_file.setPlaceholderText(" Please enter container address...")
        self.input_adress_file.setStyleSheet("QLineEdit {\n"
                                             "    background-color: rgb(255, 170, 0);\n"
                                             "    border: None;\n"
                                             "}")
        self.input_adress_file.setObjectName("input_adress_file")

        self.clear_line_adress = QtWidgets.QPushButton(self.centralwidget)
        self.clear_line_adress.setGeometry(QtCore.QRect(300, 60, 50, 25))
        self.clear_line_adress.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.clear_line_adress.setObjectName("clear")

        self.open_file = QtWidgets.QPushButton(self.centralwidget)
        self.open_file.setGeometry(QtCore.QRect(350, 60, 75, 25))
        self.open_file.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.open_file.setObjectName("open_file")

        self.input_text = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.input_text.setPlaceholderText("Please enter text...")
        self.input_text.setGeometry(QtCore.QRect(30, 115, 395, 140))
        self.input_text.setStyleSheet("QPlainTextEdit {\n"
                                      "    background-color: rgb(255, 170, 0);\n"
                                      "    border: None;\n"
                                      "}")
        self.input_text.setObjectName("input_text")

        self.clear_input_text = QtWidgets.QPushButton(self.centralwidget)
        self.clear_input_text.setGeometry(QtCore.QRect(300, 285, 125, 25))
        self.clear_input_text.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.clear_input_text.setObjectName("clear_button")

        self.input_save_adress_file = QtWidgets.QLineEdit(self.centralwidget)
        self.input_save_adress_file.setGeometry(QtCore.QRect(30, 340, 270, 25))
        self.input_save_adress_file.setPlaceholderText(" Please enter a save address...")
        self.input_save_adress_file.setStyleSheet("QLineEdit {\n"
                                                  "    background-color: rgb(255, 170, 0);\n"
                                                  "    border: None;\n"
                                                  "}")
        self.input_save_adress_file.setObjectName("input_save_adress_file")

        self.clear_save_line_adress = QtWidgets.QPushButton(self.centralwidget)
        self.clear_save_line_adress.setGeometry(QtCore.QRect(300, 340, 50, 25))
        self.clear_save_line_adress.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.clear_save_line_adress.setObjectName("clear")

        self.save_file = QtWidgets.QPushButton(self.centralwidget)
        self.save_file.setGeometry(QtCore.QRect(350, 340, 75, 25))
        self.save_file.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.save_file.setObjectName("save_file")

        self.encrypt_button = QtWidgets.QPushButton(self.centralwidget)
        self.encrypt_button.setGeometry(QtCore.QRect(300, 395, 125, 25))
        self.encrypt_button.setStyleSheet("background-color: rgb(0, 170, 127);")
        self.encrypt_button.setObjectName("encrypt")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 450, 455, 1))
        self.label.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.label.setObjectName("label")

        self.output_decryption_key = QtWidgets.QTextEdit(self.centralwidget)
        self.output_decryption_key.setGeometry(QtCore.QRect(30, 481, 390, 30))
        self.output_decryption_key.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.output_decryption_key.setObjectName("output_key")
        self.output_decryption_key.setPlaceholderText("Your decryption key...")

        self.output_RSA_key = QtWidgets.QTextEdit(self.centralwidget)
        self.output_RSA_key.setGeometry(QtCore.QRect(30, 541, 390, 30))
        self.output_RSA_key.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.output_RSA_key.setObjectName("output_key")
        self.output_RSA_key.setPlaceholderText("Your RSA key...")

        Curiosity_chipher.setCentralWidget(self.centralwidget)

        self.retranslateUi(Curiosity_chipher)
        QtCore.QMetaObject.connectSlotsByName(Curiosity_chipher)

    def retranslateUi(self, Curiosity_chipher):
        _translate = QtCore.QCoreApplication.translate
        Curiosity_chipher.setWindowTitle(_translate("Curiosity_chipher", "Cyriosity encrypt"))
        self.menu_encrypt_button.setText(_translate("Curiosity_chipher", "Encrypt"))
        self.menu_decryption_button.setText(_translate("Curiosity_chipher", "Decryption"))
        self.open_file.setText(_translate("Curiosity_chipher", "Chek file"))
        self.clear_line_adress.setText(_translate("Curiosity_chipher", "Clear"))
        self.encrypt_button.setText(_translate("Curiosity_chipher", "Encrypt"))
        self.clear_input_text.setText(_translate("Curiosity_chipher", "Clear"))
        self.clear_save_line_adress.setText(_translate("Curiosity_chipher", "Clear"))
        self.save_file.setText(_translate("Curiosity_chipher", "Chek save"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Curiosity_chipher = QtWidgets.QMainWindow()
    ui = Ui_Curiosity_chipher()
    ui.setupUi(Curiosity_chipher)
    Curiosity_chipher.show()
    sys.exit(app.exec_())
