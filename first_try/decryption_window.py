# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\3_kurs\6_sem\Kursach3\test\cur_decryption.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Curiosity_decryption(object):
    def setupUi(self, Curiosity_decryption):
        Curiosity_decryption.setObjectName("Curiosity_decryption")
        Curiosity_decryption.resize(455, 420)
        Curiosity_decryption.setMaximumSize(QtCore.QSize(455, 420))
        Curiosity_decryption.setStyleSheet("background-color: #4B0082;")

        self.centralwidget = QtWidgets.QWidget(Curiosity_decryption)
        self.centralwidget.setObjectName("centralwidget")

        """меню перехода"""
        self.menu_encrypt_button = QtWidgets.QPushButton(self.centralwidget)
        self.menu_encrypt_button.setGeometry(0, 0, 70, 30)
        self.menu_encrypt_button.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.menu_encrypt_button.setObjectName("encrypt_buttont")

        self.menu_decryption_button = QtWidgets.QPushButton(self.centralwidget)
        self.menu_decryption_button.setGeometry(70, 0, 70, 30)
        self.menu_decryption_button.setStyleSheet("background-color: rgb(80, 90, 100);\n"
                                                  "border: None;")
        self.menu_decryption_button.setObjectName("decryption_button")

        """адрес контейнера"""
        self.input_line_adress = QtWidgets.QLineEdit(self.centralwidget)
        self.input_line_adress.setGeometry(QtCore.QRect(30, 60, 270, 30))
        self.input_line_adress.setStyleSheet("background-color: rgb(170, 85, 127);\n"
                                             "border-color: rgb(255, 170, 0);")
        self.input_line_adress.setObjectName("input_line_adress")
        self.input_line_adress.setPlaceholderText(" Enter container adress...")

        """кнопка отчистки адреса контейнера"""
        self.clear_line_adress_Button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_line_adress_Button.setGeometry(QtCore.QRect(300, 60, 50, 30))
        self.clear_line_adress_Button.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.clear_line_adress_Button.setObjectName("clear")

        """кнопка открывающая мои документы для автоматического выбора файла"""
        self.input_adress_Button = QtWidgets.QPushButton(self.centralwidget)
        self.input_adress_Button.setGeometry(QtCore.QRect(350, 60, 75, 30))
        self.input_adress_Button.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.input_adress_Button.setObjectName("input_adress_Button")

        """поле для ввода ключа извлечения"""
        self.input_line_decryption_key = QtWidgets.QLineEdit(self.centralwidget)
        self.input_line_decryption_key.setGeometry(QtCore.QRect(30, 120, 320, 30))
        self.input_line_decryption_key.setStyleSheet("border-color: rgb(255, 85, 0);\n"
                                                     "background-color: rgb(170, 85, 127);")
        self.input_line_decryption_key.setObjectName("input_line_key")
        self.input_line_decryption_key.setPlaceholderText(" Enter your decryption key...")

        """кнопка для отчистки поля с ключом извлечения"""
        self.clear_line_decryption_key_Button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_line_decryption_key_Button.setGeometry(QtCore.QRect(350, 120, 75, 30))
        self.clear_line_decryption_key_Button.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.clear_line_decryption_key_Button.setObjectName("clear_line_key")

        """поле для ввода ключа RSA"""
        self.input_line_RSA_key = QtWidgets.QLineEdit(self.centralwidget)
        self.input_line_RSA_key.setGeometry(QtCore.QRect(30, 180, 320, 30))
        self.input_line_RSA_key.setStyleSheet("border-color: rgb(255, 85, 0);\n"
                                              "background-color: rgb(170, 85, 127);")
        self.input_line_RSA_key.setObjectName("input_line_key")
        self.input_line_RSA_key.setPlaceholderText(" Enter your RSA key...")

        """кнопка для отчистки поля с ключом RSA"""
        self.clear_line_RSA_key_Button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_line_RSA_key_Button.setGeometry(QtCore.QRect(350, 180, 75, 30))
        self.clear_line_RSA_key_Button.setStyleSheet("background-color: rgb(80, 100, 127);")
        self.clear_line_RSA_key_Button.setObjectName("clear_line_RSA_key")

        """поле ввода адреса для сохранения информации"""
        self.input_line_save_adress = QtWidgets.QLineEdit(self.centralwidget)
        self.input_line_save_adress.setGeometry(QtCore.QRect(30, 240, 270, 30))
        self.input_line_save_adress.setStyleSheet("border-color: rgb(255, 85, 0);\n"
                                                  "background-color: rgb(170, 85, 127);")
        self.input_line_save_adress.setObjectName("input_line_save_adress")
        self.input_line_save_adress.setPlaceholderText(" Enter save-adress for container...")

        """кнопка для выбора папки с инфой"""
        self.input_save_adress_Button = QtWidgets.QPushButton(self.centralwidget)
        self.input_save_adress_Button.setGeometry(QtCore.QRect(350, 240, 75, 30))
        self.input_save_adress_Button.setStyleSheet("background-color: rgb(80, 100, 127);\n"
                                                    "border-top-color: rgb(255, 170, 0);\n"
                                                    "")
        self.input_save_adress_Button.setObjectName("input_save_adress_Button")

        """кнопка для отчистки поля с адресом сохранения"""
        self.clear_line_save_adress_Button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_line_save_adress_Button.setGeometry(QtCore.QRect(300, 240, 50, 30))
        self.clear_line_save_adress_Button.setStyleSheet("background-color: rgb(80, 100, 127);\n"
                                                         "border-top-color: rgb(255, 170, 0);\n"
                                                         "")
        self.clear_line_save_adress_Button.setObjectName("clear_save_line")

        """кнопка для запуска алгоритма"""
        self.decryption_Button = QtWidgets.QPushButton(self.centralwidget)
        self.decryption_Button.setGeometry(QtCore.QRect(300, 300, 125, 30))
        self.decryption_Button.setStyleSheet("background-color: rgb(0, 170, 127);\n"
                                             "border-top-color: rgb(255, 170, 0);\n"
                                             "")
        self.decryption_Button.setObjectName("decryption_Button")

        self.ending = QtWidgets.QTextEdit(self.centralwidget)
        self.ending.setGeometry(QtCore.QRect(30, 360, 395, 30))
        self.ending.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.ending.setObjectName("ending")

        Curiosity_decryption.setCentralWidget(self.centralwidget)

        self.retranslateUi(Curiosity_decryption)
        QtCore.QMetaObject.connectSlotsByName(Curiosity_decryption)

    def retranslateUi(self, Curiosity_decryption):
        _translate = QtCore.QCoreApplication.translate
        Curiosity_decryption.setWindowTitle(_translate("Curiosity_decryption", "Curiosity decryption"))
        self.menu_encrypt_button.setText(_translate("Curiosity_chipher", "Encrypt"))
        self.menu_decryption_button.setText(_translate("Curiosity_chipher", "Decryption"))
        self.clear_line_adress_Button.setText(_translate("Curiosity_decryption", "Clear"))
        self.input_adress_Button.setText(_translate("Curiosity_decryption", "Chek file"))
        self.input_save_adress_Button.setText(_translate("Curiosity_decryption", "Chek file"))
        self.clear_line_save_adress_Button.setText(_translate("Curiosity_decryption", "Clear"))
        self.clear_line_decryption_key_Button.setText(_translate("Curiosity_decryption", "Clear"))
        self.clear_line_RSA_key_Button.setText(_translate("Curiosity_decryption", "Clear"))
        self.decryption_Button.setText(_translate("Curiosity_decryption", "Decryption"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Curiosity_decryption = QtWidgets.QMainWindow()
    ui = Ui_Curiosity_decryption()
    ui.setupUi(Curiosity_decryption)
    Curiosity_decryption.show()
    sys.exit(app.exec_())
