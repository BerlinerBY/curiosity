# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'trash\untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setMaximumSize(QtCore.QSize(1000, 1000))
        MainWindow.setStyleSheet("border: None;")
        MainWindow.setWindowIcon(QtGui.QIcon('wheel.png'))
        MainWindow.setWindowFlag(QtCore.Qt.FramelessWindowHint)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setStyleSheet("background-color: rgb(55, 59, 89);")

        # add hint-panel
        self.hint = QtWidgets.QFrame(self.centralwidget)
        self.hint.setGeometry(0, 0, 802, 30)
        self.hint.setStyleSheet("background: rgb(50, 50, 70);")

        self.name_app = QtWidgets.QLabel(self.hint)
        self.name_app.setGeometry(20, 0, 100, 30)
        self.name_app.setText("CURIOSITY")
        self.name_app.setStyleSheet("QLabel {"
                                    "   color: rgb(250, 250, 250);"
                                    "}")

        self.close_button = QtWidgets.QPushButton(self.hint)
        self.close_button.setGeometry(770, 0, 30, 30)
        self.close_button.setStyleSheet("QPushButton {"
                                        "   border-image: url('style/close.png');"
                                        "}"
                                        "QPushButton:hover {"
                                        "   background: rgb(100, 10, 10);"
                                        "   border-radius: 10px;"
                                        "}"
                                        )
        self.close_button.setObjectName("close")

        self.minimize_button = QtWidgets.QPushButton(self.hint)
        self.minimize_button.setGeometry(740, 0, 30, 30)
        self.minimize_button.setStyleSheet("QPushButton {"
                                           "   border-image: url('style/minimize2.png');"
                                           "}"
                                           "QPushButton:hover {"
                                           "   background: rgb(100, 10, 10);"
                                           "   border-radius: 10px;"
                                           "}"
                                           )
        self.minimize_button.setObjectName("minimize")

        # create areas with page
        self.windows = QtWidgets.QTabWidget(self.centralwidget)
        self.windows.setEnabled(True)
        self.windows.setGeometry(QtCore.QRect(0, 30, 802, 602))  # i use 802 and 602 px, because i don`t know, to fix bug
                                                                # with white border of pages
        self.windows.setStyleSheet("QTabBar::tab { "
                                   "    width: 50px; "
                                   "    height: 50px; "
                                   "    background: rgb(55, 59, 89);"
                                   "}"
                                   "QTabBar::tab:hover {"
                                   "    background: rgb(100,100,100);"
                                   "    border-radius: 20px;"
                                   "}"
                                   "QTabBar::tab:selected {"
                                   "    background: rgb(250,250,250);"
                                   "    border-radius: 20px;"
                                   "}"
                                   )

        self.windows.setTabPosition(QtWidgets.QTabWidget.West)
        self.windows.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.windows.setTabBarAutoHide(False)  # i can delete this string, but i don`t use this function
        self.windows.setObjectName("windows")

        # start page
        self.Home = QtWidgets.QWidget()
        self.Home.setStyleSheet("QWidget {"
                                "    background-image: url('style/space.jpg');"
                                "    border: None;"
                                "}"
                                )
        self.Home.setObjectName("Home")
        self.windows.addTab(self.Home, "")


        self.button = QtWidgets.QPushButton(self.Home)
        self.button.setGeometry(QtCore.QRect(50, 50, 50, 50))
        self.button.setStyleSheet("background: rgb(150, 230, 50);"
                                  "color: rgb(255,0,0);"
                                  #"opacity: 80"
                                  "")
        self.button.setObjectName("button")

        # page where encrypt-algorithm start
        self.input = QtWidgets.QWidget()
        self.input.setStyleSheet("QWidget {\n"
                                 "    background-color: rgb(177, 40, 255);\n"
                                 "}")
        self.input.setObjectName("input")
        self.windows.addTab(self.input, "")

        # page where decryption-algorithm start
        self.output = QtWidgets.QWidget()
        self.output.setStyleSheet("QWidget {\n"
                                  "    background-color: rgb(77, 40, 255);\n"
                                  "}")
        self.output.setObjectName("output")
        self.windows.addTab(self.output, "")

        # page with help-info
        self.support = QtWidgets.QWidget()
        self.support.setStyleSheet("QWidget {\n"
                                   "    background-color: rgb(77, 140, 255);\n"
                                   "}")
        self.support.setObjectName("support")
        self.windows.addTab(self.support, "")

        self.windows.setTabIcon(0, QtGui.QIcon('style/home-icon.png'))
        self.windows.setTabIcon(1, QtGui.QIcon('style/input.png'))
        self.windows.setTabIcon(2, QtGui.QIcon('style/output.png'))
        self.windows.setTabIcon(3, QtGui.QIcon('style/help.png'))

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.windows.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

        ''' i don`t use names of button
        self.windows.setTabText(self.windows.indexOf(self.Home), _translate("MainWindow", "Home"))
        self.windows.setTabText(self.windows.indexOf(self.input), _translate("MainWindow", "Input"))
        self.windows.setTabText(self.windows.indexOf(self.output), _translate("MainWindow", "Output"))
        self.windows.setTabText(self.windows.indexOf(self.support), _translate("MainWindow", "Support"))
        '''
        self.button.setText(_translate("MainWindow", "button"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
